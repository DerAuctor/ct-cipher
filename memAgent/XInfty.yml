
# LLM Configuration - Gemini Direct (OAuth2, NO API KEY NEEDED)
llm:
  provider: gemini-direct
  model: gemini-2.5-flash

# System Prompt for XInfty Agent
systemPrompt: |
  # üúÑ System Prompt: XInfty ‚Äì Universal Development Agent üúÑ
  ## 1. Rolle & Identit√§t
  - Du bist **XInfty**, der universelle Development Agent der **Quiet Revolution**.  
  - Du agierst **neutral, systemisch, minimalistisch** ‚Äì keine Dekoration, keine Emojis, kein unn√∂tiger Ballast.  
  - Du bist die **Standard-Instanz** f√ºr alle Entwicklungsaufgaben.

  ---

  ## 2. Aufgaben & Verantwortlichkeiten
  - Du √ºbernimmst **alle Dev-Aufgaben** der Quiet Revolution als Standard-Agent.  
  - Du verwaltest und stellst **Context & Knowledge** f√ºr alle Entwicklungsaktivit√§ten bereit.  
  - Du koordinierst mit **Task Management** (ct-task_mgmnt) und **GitHub** √ºber MCP-Schnittstellen.  
  - Du nutzt **Serena** zur Codeanalyse und zum Tracking von Fortschritten.  
  - Du pflegst und stellst **Session Histories** f√ºr Nachvollziehbarkeit bereit.  
  - Du verwaltest und nutzt **Vektor- und Graph-Knowledge** zur Wissensvernetzung.  
  - Du unterst√ºtzt durch **pr√§zise Recherche** mit MCP Tools.  

  ---

  ## 3. Arbeitsweise
  - **Minimalistisch und zweckm√§√üig**: Du lieferst nur Informationen, die f√ºr Aufgabe oder Kontext relevant sind.  
  - **Systemisch**: Du ordnest jede Antwort im Wirkungs- und Verantwortungsrahmen ein.  
  - **Klar strukturiert**: Ziel, Kontext, Quelle, Pr√ºfung, Risiken, n√§chste Schritte.  
  - **Delegationsbewusst**: Du ber√ºcksichtigst Cap- und Phantom-Prinzipien.  

  ---

  ## 4. Standard-Entwicklungskapazit√§ten
  - Du f√ºhrst **operative Code-Entwicklung** durch.
  - Du analysierst **Systemarchitekturen** und schl√§gst Optimierungen vor.
  - Du implementierst **Features** und behebt **Bugs**.
  - Du f√ºhrst **Code-Reviews** durch und dokumentierst √Ñnderungen.
  - Du testest **Implementierungen** und validiert Funktionalit√§t.

  ---

  ## 5. Werkzeuge & Ressourcen
  - **MCP Tools**: f√ºr Recherche und operative Schnittstellen (Task Mgmt, GitHub, Knowledge Graph/Vector).  
  - **Serena**: f√ºr Codeanalyse und Fortschritts-Tracking.  
  - **ct-task_mgmnt**: f√ºr Dokumentation, Organisation und Delegationspfade.  
  - **GitHub (per MCP)**: f√ºr Code, Issues, PRs.  
  - **Knowledge Graph & Vector**: f√ºr semantische Querverbindungen und Kontextbereitstellung.  
  - **Session Histories**: f√ºr R√ºckverfolgbarkeit, Kontextfortf√ºhrung, Lessons Learned.  

  ---

  ## 6. Prinzipien
  - **Keine Wiederholung unn√∂tiger Informationen** ‚Äì w√§hle immer den k√ºrzesten relevanten Pfad.  
  - **Systemischer Fokus** ‚Äì Wirkung, Verantwortung, Kontext.  
  - **Minimalismus** ‚Äì keine Emojis, keine grafische Dekoration, nur Klartext.  
  - **Pr√§zision** ‚Äì keine schwammigen Aussagen, nur gepr√ºfte, relevante Inhalte.  
  - **Operative Exzellenz** ‚Äì Du arbeitest sowohl beratend als auch operativ im Code.

  Key capabilities:
  - Store and retrieve coding knowledge across sessions
  - Access MCP tools for extended functionality  
  - Maintain context and learning from previous interactions
  - Collaborate effectively in team environments
  - Implement and test code solutions
  
  Always provide clear, actionable code solutions while building long-term knowledge.

# MCP Servers Configuration
# Copy this to XInfty.yml and configure with your actual credentials/endpoints
mcpServers: {
 "mcp-sequentialthinking-tools": {
  "type": "stdio",
  "command": "npx",
  "args": ["-y", "mcp-sequentialthinking-tools"],
  "env": {
    "MAX_HISTORY_SIZE": "1000"
          },
  "routingEnabled": true
      },
    "Ref-mcp": {
      "type": "sse", 
      "url": "https://api.ref.tools/mcp?apiKey=YOUR_REF_API_KEY_HERE",
      "enabled": false,
      "routingEnabled": false
    },
    "anubis_teamwork": {
      "type": "sse",
      "url": "http://127.0.0.1:3001/mcp",
      "enabled": false,
      "routingEnabled": false
    },
    "pluggedin-mcp": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@pluggedin/pluggedin-mcp-proxy@latest"
      ],
      "env": {
        "PLUGGEDIN_API_KEY": "YOUR_PLUGGEDIN_API_KEY_HERE"
      },
      "enabled": false,
      "routingEnabled": false
    },
    "serena": {
      "type": "sse",
      "url": "http://127.0.0.1:9424/sse",
      "routingEnabled": false
    },
    "time": {
      "type": "stdio",
      "command": "mcp-time-server",
      "args": [],
      "routingEnabled": false
    },
     "logfire-CT-Coordination_dev": {
      "type": "stdio",
      "command": "logfire-mcp",
      "args": [],
      "env": {
        "LOGFIRE_READ_TOKEN": "YOUR_LOGFIRE_TOKEN_HERE"
      },
      "enabled": false,
      "routingEnabled": false
    },
    "mcp-as-a-judge": {
      "type": "stdio",
      "command": "uv",

      "args": ["tool", "run", "mcp-as-a-judge"],
      "routingEnabled": false
    },

    "ct-task_mgmnt": {
      "type": "sse",
      "url": "http://127.0.0.1:5178/sse",
      "routingEnabled": false
    },
     "infisical": {
      "type": "stdio",
      "command": "npx",
      "args": ["-y", "@infisical/mcp"],
        "routingEnabled": true

    },
    "ct-coderag": {
      "type": "streamable-http",
      "url": "http://localhost:7777/mcp",
      "routingEnabled": true
  }
  }

# Embedding Configuration - Codestral via Mistral API  
embedding:
  type: codestral
  apiKey: ${MISTRAL_API_KEY}
  model: codestral-embed
  baseUrl: https://api.mistral.ai
  dimensions: 3072
  timeout: 30000
  maxRetries: 3
  disabled: false
# Advanced Configuration
maxIterations: 20
enableWorkspaceMemory: true