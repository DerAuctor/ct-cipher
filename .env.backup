# Core_Team-cipher (ct-cipher) Environment Configuration
# Copy this file to .env and fill in your actual values

# ====================
# API Configuration
# ====================
# At least one API key is required
#OPENAI_API_KEY=your-openai-api-key-here
#ANTHROPIC_API_KEY=your-anthropic-api-key-here
OPENROUTER_API_KEY=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
#QWEN_API_KEY=your-alibaba-cloud-api-key-here
#GEMINI_API_KEY=your-gemini-api-key-here
#VOYAGE_API_KEY=your-voyage-api-key-here
MISTRAL_API_KEY=QWS02ijImyNkxboONSsWduT54a0739De
MISTRAL_CODESTRAL_API_KEY=CgMWJgFyfItu1uZ9yyuh74n50n8xa9wy

# Ollama Configuration (optional - only if using Ollama)
# OLLAMA_BASE_URL=http://localhost:11434

# ====================
# Embedding Configuration (optional)
# ====================
# Provider priority: OpenAI > Gemini > Ollama > Disabled
# If not specified in YAML, uses environment auto-detection

# Override embedding model (optional)
EMBEDDING_MODEL=codestral-embed
EMBEDDING_PROVIDER=codestral
EMBEDDING_DIMENSIONS=3072
EMBEDDING_TIMEOUT=30000
EMBEDDING_MAX_RETRIES=3

# Disable embeddings entirely (lightweight mode)
DISABLE_EMBEDDINGS=false

# Optional: OpenAI base URL (for custom endpoints)
# OPENAI_BASE_URL=https://api.openai.com/v1

# ====================
# AWS Bedrock Configuration (optional - only if using AWS provider)
# ====================
#AWS_ACCESS_KEY_ID=your-aws-access-key-id
#AWS_SECRET_ACCESS_KEY=your-aws-secret-access-key
#AWS_DEFAULT_REGION=us-east-1
# Optional: AWS_SESSION_TOKEN=your-session-token

# ====================
# Azure OpenAI Configuration (optional - only if using Azure provider)
# ====================
#AZURE_OPENAI_API_KEY=your-azure-openai-api-key
#AZURE_OPENAI_ENDPOINT=https://your-resource.openai.azure.com
#AZURE_OPENAI_API_VERSION=2024-10-01-preview

# ====================
# Application Settings
# ====================
NODE_ENV=development
CIPHER_LOG_LEVEL=info
REDACT_SECRETS=true

# API prefix for routes
# CIPHER_API_PREFIX=""

# ====================
# Storage Configuration
# ====================
# ====================
# Cache Configuration
# ====================
# Available types: in-memory, redis
STORAGE_CACHE_TYPE=in-memory
# STORAGE_CACHE_HOST=localhost
# STORAGE_CACHE_PORT=6379
# STORAGE_CACHE_USERNAME=
# STORAGE_CACHE_PASSWORD=
# STORAGE_CACHE_DATABASE=0

# Storage backend for chat history and session data
# Available types: in-memory, postgresql, sqlite
# ====================
# Database Storage Configuration
# ====================
# Storage backend for chat history and session data
# Available types: in-memory, postgresql, sqlite
STORAGE_DATABASE_TYPE=postgresql

# PostgreSQL individual connection parameters (alternative to CIPHER_PG_URL)
# STORAGE_DATABASE_HOST=localhost
# STORAGE_DATABASE_PORT=5432
# STORAGE_DATABASE_NAME=cipher_db
# STORAGE_DATABASE_USER=cipher_user
# STORAGE_DATABASE_PASSWORD=your_password
# STORAGE_DATABASE_SSL=false

# PostgreSQL individual connection parameters (alternative to CIPHER_PG_URL)
# STORAGE_DATABASE_HOST=localhost
# STORAGE_DATABASE_PORT=5432
# STORAGE_DATABASE_NAME=cipher_db
# STORAGE_DATABASE_USER=cipher_user
# STORAGE_DATABASE_PASSWORD=your_password
# STORAGE_DATABASE_SSL=false

CIPHER_MULTI_BACKEND=1
# PostgreSQL configuration for chat history and session storage
# Format: postgresql://[username[:password]@][host[:port]][/database][?param=value&...]
CIPHER_PG_URL=postgresql://postgres.iqvdsnwslpbzybxzzgck:a967QboyndSRtz7K@aws-1-eu-central-1.pooler.supabase.com:5432/postgres?sslmode=require
CIPHER_WAL_FLUSH_INTERVAL=5000
# ====================
# Memory Search Configuration
# ====================
# Options: knowledge, reflection, both
SEARCH_MEMORY_TYPE=both

# ====================
# Vector Store Configuration
# ====================
# Available types: in-memory, qdrant, milvus, chroma, pinecone, pgvector, faiss, redis, weaviate
VECTOR_STORE_TYPE=qdrant

# Qdrant configuration (only used if VECTOR_STORE_TYPE=qdrant)
VECTOR_STORE_HOST=14bf5a25-4d73-407a-92d4-59550cd6f1a4.europe-west3-0.gcp.cloud.qdrant.io
VECTOR_STORE_PORT=6333
VECTOR_STORE_URL=https://14bf5a25-4d73-407a-92d4-59550cd6f1a4.europe-west3-0.gcp.cloud.qdrant.io:6333
VECTOR_STORE_API_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2Nlc3MiOiJtIn0.nez1anIfEGWZvbw63DV6MCRA539GiKlaMlEEvLUdzPU

# Milvus configuration (only used if VECTOR_STORE_TYPE=milvus)
# VECTOR_STORE_HOST=localhost
# VECTOR_STORE_PORT=19530
# VECTOR_STORE_URL=your-milvus-cluster-endpoint
# VECTOR_STORE_API_KEY=your-milvus-api-key
# VECTOR_STORE_USERNAME=your-milvus-zilliz-cloud-username
# VECTOR_STORE_PASSWORD=your-milvus-zilliz-cloud-password

# ChromaDB configuration (only used if VECTOR_STORE_TYPE=chroma)
# VECTOR_STORE_HOST=localhost
# VECTOR_STORE_PORT=8000
# VECTOR_STORE_URL=http://localhost:8000

# Pinecone configuration (only used if VECTOR_STORE_TYPE=pinecone)
# VECTOR_STORE_API_KEY=your-pinecone-api-key

# PgVector configuration (only used if VECTOR_STORE_TYPE=pgvector)
#VECTOR_STORE_URL=postgresql://postgres.iqvdsnwslpbzybxzzgck:bJn%26%40DS%26kgg8WbrmFwWg@aws-1-eu-central-1.pooler.supabase.com:5432/postgres

# FAISS configuration (only used if VECTOR_STORE_TYPE=faiss)
# FAISS_BASE_STORAGE_PATH=./faiss_data

# Redis configuration (only used if VECTOR_STORE_TYPE=redis)
# VECTOR_STORE_HOST=localhost
# VECTOR_STORE_PORT=6379
# VECTOR_STORE_PASSWORD=your-redis-password

# Weaviate configuration (only used if VECTOR_STORE_TYPE=weaviate)
# VECTOR_STORE_URL=https://your-weaviate-cluster.weaviate.network
# VECTOR_STORE_API_KEY=your-weaviate-api-key
# Vector collection settings
VECTOR_STORE_COLLECTION=knowledge_memory
# VECTOR_STORE_COLLECTION_NAME=your_collection_name
VECTOR_STORE_DIMENSION=3072
VECTOR_STORE_DISTANCE=Cosine
VECTOR_STORE_ON_DISK=false
# VECTOR_STORE_MAX_VECTORS=10000

# ====================
# Reflection Memory Configuration
# ====================
REFLECTION_VECTOR_STORE_COLLECTION=reflection_memory
DISABLE_REFLECTION_MEMORY=false

# ====================
# MCP Configuration
# ====================
MCP_GLOBAL_TIMEOUT=30000
MCP_TRANSPORT_TYPE=sse
MCP_PORT=5555

# ====================
# Knowledge Graph Configuration (optional)
# ====================
# NEO4J LOCAL CONFIGURATION (for local development)
# Local Neo4j configuration


KNOWLEDGE_GRAPH_TYPE=neo4j
# KNOWLEDGE_GRAPH_HOST=localhost
# KNOWLEDGE_GRAPH_PORT=7687
# KNOWLEDGE_GRAPH_URI=bolt://localhost:7687
# KNOWLEDGE_GRAPH_USERNAME=neo4j
# KNOWLEDGE_GRAPH_PASSWORD=your-local-password
# KNOWLEDGE_GRAPH_DATABASE=neo4j

# NEO4J CLOUD CONFIGURATION (for cloud deployment)

KNOWLEDGE_GRAPH_URI=neo4j+s://c5786294.databases.neo4j.io:7687
KNOWLEDGE_GRAPH_USERNAME=neo4j
KNOWLEDGE_GRAPH_PASSWORD=Q--yPQ3k-SveFp2f1NiXJ7-DNXIusCl0-KyEiWnzF9I
KNOWLEDGE_GRAPH_DATABASE=neo4j


# CONFIGURATION FOR EVENT MANAGEMENT

# # Enable or disable event filtering (true/false)
# EVENT_FILTERING_ENABLED=false

# # Comma-separated list of event types to filter out (block)
# # Example: tool:executionStarted,tool:executionCompleted,llm:thinking
# EVENT_FILTERED_TYPES=

# # Enable or disable event persistence (true/false)
# EVENT_PERSISTENCE_ENABLED=true

# # Path to store event log files (if using file storage)
# EVENT_PERSISTENCE_PATH=./data/events

# Enable or disable input refinement for better retrieval
ENABLE_QUERY_REFINEMENT=true 

STORAGE_DATABASE_TYPE=postgres
KNOWLEDGE_GRAPH_ENABLED=true

MCP_SERVER_MODE=aggregator
AGGREGATOR_TIMEOUT=60000
AGGREGATOR_CONFLICT_RESOLUTION=prefix
